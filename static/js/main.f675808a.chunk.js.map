{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","percentTotal","FeedbackOptions","increment","className","s","btnS","btn","onClick","Notification","message","App","state","handleImcrement","e","nameOfButton","target","textContent","toLowerCase","setState","prevState","key","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","options","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oRAeeA,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,aAA9B,OACjB,8BACE,+BACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,qDAAwBC,EAAxB,a,gBCSSC,EAfS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzB,OACE,sBAAKC,UAAWC,IAAEC,KAAlB,UACE,wBAAQF,UAAWC,IAAEE,IAAKC,QAASL,EAAnC,kBAGA,wBAAQC,UAAWC,IAAEE,IAAKC,QAASL,EAAnC,qBAGA,wBAAQC,UAAWC,IAAEE,IAAKC,QAASL,EAAnC,qBCHSM,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,8BACE,4BAAIA,OCsDKC,G,kNArDbC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,gBAAkB,SAACC,GACjB,IAAMC,EAAeD,EAAEE,OAAOC,YAAYC,cAC1C,EAAKC,UAAS,SAACC,GACb,IAAK,IAAMC,KAAOD,EAChB,GAAIC,IAAQN,EACV,OAAO,eAAGM,EAAMD,EAAUC,GAAO,O,EAMzCC,mBAAqB,kBACnB,EAAKV,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAEpDwB,gCAAkC,kBAChC,EAAKX,MAAMf,KACP2B,KAAKC,MAAyB,IAAlB,EAAKb,MAAMf,KAAc,EAAKyB,sBAC1C,G,4CAEN,WAAU,IAAD,EACwBI,KAAKd,MAA5Bf,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ0B,KAAKJ,qBACbrB,EAAeyB,KAAKH,kCAC1B,OACE,sBAAKnB,UAAU,MAAf,UACE,+CACA,uDACA,cAAC,EAAD,CACEuB,QAASD,KAAKd,MACdT,UAAWuB,KAAKb,kBAEjBhB,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,aAAcA,IAGhB,cAAC,EAAD,CAAcS,QAAS,6B,GA/CfkB,cCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.f675808a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentTotal }) => (\r\n  <div>\r\n    <ul>\r\n      <li>Good:{good}</li>\r\n      <li>Neutral:{neutral}</li>\r\n      <li>Bad:{bad}</li>\r\n      <li>Total:{total}</li>\r\n      <li>Positive Feedback: {percentTotal}%</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percentTotal: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ increment }) => {\r\n  return (\r\n    <div className={s.btnS}>\r\n      <button className={s.btn} onClick={increment}>\r\n        Good\r\n      </button>\r\n      <button className={s.btn} onClick={increment}>\r\n        Neutral\r\n      </button>\r\n      <button className={s.btn} onClick={increment}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  increment: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleImcrement = (e) => {\n    const nameOfButton = e.target.textContent.toLowerCase();\n    this.setState((prevState) => {\n      for (const key in prevState) {\n        if (key === nameOfButton) {\n          return { [key]: prevState[key] + 1 };\n        }\n      }\n    });\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () =>\n    this.state.good\n      ? Math.round((this.state.good * 100) / this.countTotalFeedback())\n      : 0;\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentTotal = this.countPositiveFeedbackPercentage();\n    return (\n      <div className=\"App\">\n        <h1>Cafe Expresso</h1>\n        <h2>Please leave feedback</h2>\n        <FeedbackOptions\n          options={this.state}\n          increment={this.handleImcrement}\n        />\n        {good > 0 || neutral > 0 || bad > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            percentTotal={percentTotal}\n          />\n        ) : (\n          <Notification message={\"No feetback given\"} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__x2leO\"};"],"sourceRoot":""}